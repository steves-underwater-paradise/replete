name: Resource Pack CI

on:
  push:
    branches:
      - '**'
  pull_request:
    branches:
      - '**'

jobs:
  skip_duplicate_jobs:
    name: Skip duplicate jobs
    continue-on-error: true # Uncomment once integration is finished
    runs-on: ubuntu-latest
    # Map a step output to a job output
    outputs:
      should_skip: ${{ steps.skip_check.outputs.should_skip }}
    steps:
      - id: skip_check
        uses: fkirc/skip-duplicate-actions@v5
        with:
          paths_ignore: '["**/README.md", "**/docs/**", "**/.gitignore", "**/LICENSE"]'
          concurrent_skipping: same_content_newer

  build_and_publish:
    name: Build and publish
    runs-on: ubuntu-latest
    needs: skip_duplicate_jobs
    if: needs.skip_duplicate_jobs.outputs.should_skip != 'true'
    permissions:
      contents: write

    steps:
      - name: Clone repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # A non-shallow repository clone is required for PackSquash

      - name: Get resource pack version from pack.toml
        uses: SebRollen/toml-action@v1.2.0
        id: resource_pack_version
        with:
          file: pack.toml
          field: resource_pack.version

      - name: Get supported Minecraft version name from pack.toml
        uses: SebRollen/toml-action@v1.2.0
        id: supported_minecraft_version_name
        with:
          file: pack.toml
          field: resource_pack.supported_minecraft_version_name

      - name: Get id from pack.toml
        uses: SebRollen/toml-action@v1.2.0
        id: id
        with:
          file: pack.toml
          field: resource_pack.id

      - name: Get output directory from pack.toml
        uses: SebRollen/toml-action@v1.2.0
        id: output_directory
        with:
          file: pack.toml
          field: packsquash.output_directory

      - name: Get allowed mods from pack.toml
        uses: SebRollen/toml-action@v1.2.0
        id: allow_mods
        with:
          file: pack.toml
          field: packsquash.allow_mods

      - name: Copy resource pack files to export/
        run: |
          mkdir export/
          cp LICENSE export/LICENSE
          cp README.md export/README.md
          cp CHANGELOG.md export/CHANGELOG.md
          cp CHANGELOG_LATEST.md export/CHANGELOG_LATEST.md
          cp pack.mcmeta export/pack.mcmeta
          cp pack.png export/pack.png
          cp -r assets/ export/assets/

      - name: Create output directory
        run: |
          mkdir ${{ steps.output_directory.outputs.value }}/

      - name: Build resource pack using PackSquash
        uses: ComunidadAylas/PackSquash-action@v4
        with:
          packsquash_version: latest
          options: |
            artifact_name = "resource_pack"
            pack_directory = "export/"
            output_file_path = "${{ steps.output_directory.outputs.value }}/${{ steps.id.outputs.value }}-${{ steps.resource_pack_version.outputs.value }}+mc${{ steps.supported_minecraft_version_name.outputs.value }}.zip"
            allow_mods = ${{ steps.allow_mods.outputs.value }}

            ["LICENSE"]
            force_include = true

            ["**/*?.md"]
            force_include = true
